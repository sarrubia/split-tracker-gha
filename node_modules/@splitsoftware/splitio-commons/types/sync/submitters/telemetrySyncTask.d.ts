import { ISyncTask, ITimeTracker } from '../types';
import { IPostMetricsUsage } from '../../services/types';
import { IStorageSync, TelemetryCacheSync } from '../../storages/types';
import { TelemetryStatsPayload } from './types';
import { ILogger } from '../../logger/types';
/**
 * Converts `impressions` data from cache into request payload.
 */
export declare function telemetryCacheAdapter(telemetryCache: TelemetryCacheSync, storage: IStorageSync): {
    isEmpty(): boolean;
    clear(): void;
    state(): TelemetryStatsPayload;
};
/**
 * Sync task that periodically posts impressions data
 */
export declare function telemetrySyncTaskFactory(log: ILogger, postMetricsUsage: IPostMetricsUsage, telemetryCache: TelemetryCacheSync, telemetryRefreshRate: number, latencyTracker: ITimeTracker, storage: IStorageSync): ISyncTask;
